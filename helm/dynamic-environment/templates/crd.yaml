apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)
    controller-gen.kubebuilder.io/version: v0.9.2
  name: dynamicenvs.riskified.com
spec:
  group: riskified.com
  names:
    kind: DynamicEnv
    listKind: DynamicEnvList
    plural: dynamicenvs
    shortNames:
    - de
    singular: dynamicenv
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status of the DynamicEnv
      jsonPath: .status.state
      name: Status
      type: string
    - description: displays desired subsets and consumers count
      jsonPath: .status.totalCount
      name: Desired
      type: integer
    - description: displays how many subsets and consumers are available
      jsonPath: .status.totalReady
      name: Current
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DynamicEnv is the Schema for the dynamicenvs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DynamicEnvSpec defines the desired state of DynamicEnv
            properties:
              consumers:
                description: Consumers are like subsets but for deployments that do not open a service but connect to external resources for their work (e.g, offline workers). They are equivalent to subsets in the sense that they launch overriding deployments with custom image and/or settings. However, since they are only consumers no virtual service or destination route will be pointing to them.
                items:
                  description: Subsets defines how to generate subsets from existing Deployments
                  properties:
                    containers:
                      description: A list of container overrides (at least one of Containers or InitContainers must not be empty)
                      items:
                        description: Defines the details of the container on which changes need to be made and the relevant overrides
                        properties:
                          command:
                            description: Entrypoint array overridden to the desired subset The docker image's ENTRYPOINT is used if this is not provided.
                            items:
                              type: string
                            type: array
                          containerName:
                            description: Container name to override in multiple containers' environment. If not specified we will use the first container.
                            type: string
                          env:
                            description: Additional environment variable to the given deployment
                            items:
                              description: EnvVar represents an environment variable present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format of the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          image:
                            description: Docker image name overridden to the desired subset The Docker image found in the original deployment is used if this is not provided.
                            type: string
                        required:
                        - containerName
                        type: object
                      type: array
                    defaultVersion:
                      description: Default version for this subset (if different then the global default version). This is the version that will get the default route.
                      type: string
                    initContainers:
                      description: A list of init container overrides (at least one of Containers or InitContainers must not be empty)
                      items:
                        description: Defines the details of the container on which changes need to be made and the relevant overrides
                        properties:
                          command:
                            description: Entrypoint array overridden to the desired subset The docker image's ENTRYPOINT is used if this is not provided.
                            items:
                              type: string
                            type: array
                          containerName:
                            description: Container name to override in multiple containers' environment. If not specified we will use the first container.
                            type: string
                          env:
                            description: Additional environment variable to the given deployment
                            items:
                              description: EnvVar represents an environment variable present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format of the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          image:
                            description: Docker image name overridden to the desired subset The Docker image found in the original deployment is used if this is not provided.
                            type: string
                        required:
                        - containerName
                        type: object
                      type: array
                    name:
                      description: Deployment name (without namespace)
                      type: string
                    namespace:
                      description: Namespace where the deployment is deployed
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: Labels to add to the pods of the deployment launched by this subset. Could be used in conjunction with 'SourceLabels' in the `IstioMatches`.
                      type: object
                    replicas:
                      description: 'Number of deployment replicas. Default is 1. Note: 0 is *invalid*.'
                      format: int32
                      type: integer
                  required:
                  - name
                  - namespace
                  type: object
                type: array
              istioMatches:
                description: A list of matchers (partly corresponds to IstioMatch). Each match will have a rule of its own (merged with existing rules) ordered by their order here.
                items:
                  description: specifies a set of criterion to be met in order for the rule to be applied to the HTTP request This field is immutable after creation.
                  properties:
                    headers:
                      additionalProperties:
                        description: Describes how to match a given string in HTTP headers. Match is case-sensitive. one and only one of the fields needs to be defined (oneof)
                        properties:
                          exact:
                            type: string
                          prefix:
                            type: string
                          regex:
                            type: string
                        type: object
                      description: 'Header values are case-sensitive and formatted as follows:<br/> - `exact: "value"` for exact string match<br/> - `prefix: "value"` for prefix-based match<br/> - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).'
                      type: object
                    sourceLabels:
                      additionalProperties:
                        type: string
                      description: One or more labels that constrain the applicability of a rule to source (client) workloads with the given labels.
                      type: object
                  type: object
                type: array
              subsets:
                description: Who should participate in the given dynamic environment
                items:
                  description: Subsets defines how to generate subsets from existing Deployments
                  properties:
                    containers:
                      description: A list of container overrides (at least one of Containers or InitContainers must not be empty)
                      items:
                        description: Defines the details of the container on which changes need to be made and the relevant overrides
                        properties:
                          command:
                            description: Entrypoint array overridden to the desired subset The docker image's ENTRYPOINT is used if this is not provided.
                            items:
                              type: string
                            type: array
                          containerName:
                            description: Container name to override in multiple containers' environment. If not specified we will use the first container.
                            type: string
                          env:
                            description: Additional environment variable to the given deployment
                            items:
                              description: EnvVar represents an environment variable present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format of the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          image:
                            description: Docker image name overridden to the desired subset The Docker image found in the original deployment is used if this is not provided.
                            type: string
                        required:
                        - containerName
                        type: object
                      type: array
                    defaultVersion:
                      description: Default version for this subset (if different then the global default version). This is the version that will get the default route.
                      type: string
                    initContainers:
                      description: A list of init container overrides (at least one of Containers or InitContainers must not be empty)
                      items:
                        description: Defines the details of the container on which changes need to be made and the relevant overrides
                        properties:
                          command:
                            description: Entrypoint array overridden to the desired subset The docker image's ENTRYPOINT is used if this is not provided.
                            items:
                              type: string
                            type: array
                          containerName:
                            description: Container name to override in multiple containers' environment. If not specified we will use the first container.
                            type: string
                          env:
                            description: Additional environment variable to the given deployment
                            items:
                              description: EnvVar represents an environment variable present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format of the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          image:
                            description: Docker image name overridden to the desired subset The Docker image found in the original deployment is used if this is not provided.
                            type: string
                        required:
                        - containerName
                        type: object
                      type: array
                    name:
                      description: Deployment name (without namespace)
                      type: string
                    namespace:
                      description: Namespace where the deployment is deployed
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: Labels to add to the pods of the deployment launched by this subset. Could be used in conjunction with 'SourceLabels' in the `IstioMatches`.
                      type: object
                    replicas:
                      description: 'Number of deployment replicas. Default is 1. Note: 0 is *invalid*.'
                      format: int32
                      type: integer
                  required:
                  - name
                  - namespace
                  type: object
                type: array
            required:
            - istioMatches
            - subsets
            type: object
          status:
            description: DynamicEnvStatus defines the observed state of DynamicEnv
            properties:
              conditions:
                description: Represents the latest available observations of a deployment's current state.
                items:
                  description: Condition describes the state of a DynamicEnv at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human-readable message indicating details about the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              consumersStatus:
                additionalProperties:
                  properties:
                    errors:
                      description: List of errors related to the consumer
                      items:
                        description: StatusError shows an error we want to display in the status with the last time it happened. This *does not* have to be the only time it happened. The idea is that a list of errors should only contain single occurrence of an error (just the last).
                        properties:
                          error:
                            description: The error message
                            type: string
                          lastOccurrence:
                            description: THe last occurrence of the error
                            format: date-time
                            type: string
                        required:
                        - error
                        - lastOccurrence
                        type: object
                      type: array
                    hash:
                      description: Hash of the current consumer - for internal use
                      format: int64
                      type: integer
                    name:
                      description: The name of the resource
                      type: string
                    namespace:
                      description: The namespace where the resource is created
                      type: string
                    status:
                      description: The life cycle status of the resource
                      type: string
                  required:
                  - name
                  - namespace
                  - status
                  type: object
                type: object
              state:
                type: string
              subsetsStatus:
                additionalProperties:
                  description: SubsetStatus Contains aggregation of all resources status connected to set subset.
                  properties:
                    deployment:
                      description: Status of the deployment that belongs to the subset
                      properties:
                        name:
                          description: The name of the resource
                          type: string
                        namespace:
                          description: The namespace where the resource is created
                          type: string
                        status:
                          description: The life cycle status of the resource
                          type: string
                      required:
                      - name
                      - namespace
                      - status
                      type: object
                    destinationRules:
                      description: Status of the destination-rule that belongs to the subset
                      items:
                        description: ResourceStatus shows the status of each item created/edited by DynamicEnv
                        properties:
                          name:
                            description: The name of the resource
                            type: string
                          namespace:
                            description: The namespace where the resource is created
                            type: string
                          status:
                            description: The life cycle status of the resource
                            type: string
                        required:
                        - name
                        - namespace
                        - status
                        type: object
                      type: array
                    hash:
                      description: Hash of the current subset - for internal use
                      format: int64
                      type: integer
                    subsetErrors:
                      description: A list of global errors related to subset resources
                      properties:
                        deployment:
                          description: Subset's deployment global errors.
                          items:
                            description: StatusError shows an error we want to display in the status with the last time it happened. This *does not* have to be the only time it happened. The idea is that a list of errors should only contain single occurrence of an error (just the last).
                            properties:
                              error:
                                description: The error message
                                type: string
                              lastOccurrence:
                                description: THe last occurrence of the error
                                format: date-time
                                type: string
                            required:
                            - error
                            - lastOccurrence
                            type: object
                          type: array
                        destinationRule:
                          description: Subset's destination-rule global errors.
                          items:
                            description: StatusError shows an error we want to display in the status with the last time it happened. This *does not* have to be the only time it happened. The idea is that a list of errors should only contain single occurrence of an error (just the last).
                            properties:
                              error:
                                description: The error message
                                type: string
                              lastOccurrence:
                                description: THe last occurrence of the error
                                format: date-time
                                type: string
                            required:
                            - error
                            - lastOccurrence
                            type: object
                          type: array
                        subset:
                          description: Errors related to subset but not to any of the launched resources
                          items:
                            description: StatusError shows an error we want to display in the status with the last time it happened. This *does not* have to be the only time it happened. The idea is that a list of errors should only contain single occurrence of an error (just the last).
                            properties:
                              error:
                                description: The error message
                                type: string
                              lastOccurrence:
                                description: THe last occurrence of the error
                                format: date-time
                                type: string
                            required:
                            - error
                            - lastOccurrence
                            type: object
                          type: array
                        virtualServices:
                          description: Subset's virtual-services global errors.
                          items:
                            description: StatusError shows an error we want to display in the status with the last time it happened. This *does not* have to be the only time it happened. The idea is that a list of errors should only contain single occurrence of an error (just the last).
                            properties:
                              error:
                                description: The error message
                                type: string
                              lastOccurrence:
                                description: THe last occurrence of the error
                                format: date-time
                                type: string
                            required:
                            - error
                            - lastOccurrence
                            type: object
                          type: array
                      type: object
                    virtualServices:
                      description: Status of the virtual-service that belongs to the subset
                      items:
                        description: ResourceStatus shows the status of each item created/edited by DynamicEnv
                        properties:
                          name:
                            description: The name of the resource
                            type: string
                          namespace:
                            description: The namespace where the resource is created
                            type: string
                          status:
                            description: The life cycle status of the resource
                            type: string
                        required:
                        - name
                        - namespace
                        - status
                        type: object
                      type: array
                  type: object
                type: object
              totalCount:
                description: desired subsets and consumers count
                type: integer
              totalReady:
                description: number of available subsets and consumers
                type: integer
            required:
            - subsetsStatus
            - totalReady
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
